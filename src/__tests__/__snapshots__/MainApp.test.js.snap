// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`returns a valid address 1`] = `
<styled.div>
  <Component
    errorMessage="null"
    handleClose={[Function]}
    isOpen={false}
  />
  <div>
    <InputForm
      handleSubmit={[Function]}
      onChange={[Function]}
    />
    <Component
      finalBalance={966.76986952}
      totalReceived={1571174.22487431}
      totalSent={1570207.45500479}
    />
    <Component
      displayAddress="1J37CY8hcdUXQ1KfBhMCsUVafa8XjDsdCn"
      transactions={
        Array [
          Object {
            "balance": 96676986952,
            "result": 39989776,
            "time": 1535008717,
          },
          Object {
            "balance": 96636997176,
            "result": 1499989776,
            "time": 1535008682,
          },
          Object {
            "balance": 95137007400,
            "result": 2716966,
            "time": 1535008455,
          },
          Object {
            "balance": 95134290434,
            "result": -218137,
            "time": 1535008077,
          },
          Object {
            "balance": 95134508571,
            "result": 14274049,
            "time": 1535006582,
          },
        ]
      }
    />
  </div>
</styled.div>
`;

exports[`returns an invalid address 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MainApp
    handleChange={[Function]}
    handleClose={[Function]}
    handleSubmit={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        false,
        <Unknown
          errorMessage="Invalid Bitcoin Address. Please try again."
          handleClose={[Function]}
          isOpen={true}
/>,
        <div>
          <InputForm
                    handleSubmit={[Function]}
                    onChange={[Function]}
                    value={undefined}
          />
          <Unknown
                    finalBalance={null}
                    totalReceived={null}
                    totalSent={null}
          />
          <Unknown
                    displayAddress="1J37CY8hcdUXQ1KfBhMCsUVafa8XjDsdCn"
                    transactions={Array []}
          />
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "errorMessage": "Invalid Bitcoin Address. Please try again.",
          "handleClose": [Function],
          "isOpen": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <InputForm
              handleSubmit={[Function]}
              onChange={[Function]}
              value={undefined}
/>,
            <Unknown
              finalBalance={null}
              totalReceived={null}
              totalSent={null}
/>,
            <Unknown
              displayAddress="1J37CY8hcdUXQ1KfBhMCsUVafa8XjDsdCn"
              transactions={Array []}
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "handleSubmit": [Function],
              "onChange": [Function],
              "value": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "finalBalance": null,
              "totalReceived": null,
              "totalSent": null,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "displayAddress": "1J37CY8hcdUXQ1KfBhMCsUVafa8XjDsdCn",
              "transactions": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          false,
          <Unknown
            errorMessage="Invalid Bitcoin Address. Please try again."
            handleClose={[Function]}
            isOpen={true}
/>,
          <div>
            <InputForm
                        handleSubmit={[Function]}
                        onChange={[Function]}
                        value={undefined}
            />
            <Unknown
                        finalBalance={null}
                        totalReceived={null}
                        totalSent={null}
            />
            <Unknown
                        displayAddress="1J37CY8hcdUXQ1KfBhMCsUVafa8XjDsdCn"
                        transactions={Array []}
            />
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "errorMessage": "Invalid Bitcoin Address. Please try again.",
            "handleClose": [Function],
            "isOpen": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <InputForm
                handleSubmit={[Function]}
                onChange={[Function]}
                value={undefined}
/>,
              <Unknown
                finalBalance={null}
                totalReceived={null}
                totalSent={null}
/>,
              <Unknown
                displayAddress="1J37CY8hcdUXQ1KfBhMCsUVafa8XjDsdCn"
                transactions={Array []}
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "handleSubmit": [Function],
                "onChange": [Function],
                "value": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "finalBalance": null,
                "totalReceived": null,
                "totalSent": null,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "displayAddress": "1J37CY8hcdUXQ1KfBhMCsUVafa8XjDsdCn",
                "transactions": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
